name: DesignPatterns iOS CI/CD

on:
  push:
    branches: [main]

env:
  SIM_DEVICE: "iPhone 16 Pro"
  SIM_OS: "18.5"
  DEST: "platform=iOS Simulator,name=iPhone 16 Pro,OS=18.5,arch=arm64"

jobs:
  build-test:
    runs-on: macos-15
    permissions:
      contents: write
    timeout-minutes: 180
    env:
      DERIVED_DATA: ${{ github.workspace }}/.derived

    steps:
      - uses: actions/checkout@v4

      - name: Select Xcode 16.4
        run: sudo xcode-select -s /Applications/Xcode_16.4.app

      - name: Cache Swift Packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Developer/Xcode/DerivedData/WorkspaceArtifacts/*
            ~/Library/Developer/Xcode/DerivedData/ModuleCache
          key: macOS-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: macOS-spm-

      - name: Build for testing
        run: |
          xcodebuild build-for-testing \
            -project DesignPatterns/DesignPatterns.xcodeproj \
            -scheme DesignPatterns \
            -destination "$DEST" \
            -derivedDataPath "$DERIVED_DATA" \
            -enableCodeCoverage YES

      - name: Run Unit Tests
        run: |
          xcodebuild test-without-building \
            -project DesignPatterns/DesignPatterns.xcodeproj \
            -scheme DesignPatterns \
            -destination "$DEST" \
            -only-testing:DesignPatternsTests \
            -parallel-testing-enabled YES \
            -maximum-concurrent-test-simulator-destinations 2 \
            -derivedDataPath "$DERIVED_DATA" \
            -enableCodeCoverage YES

      - name: Run Snapshot Tests
        run: |
          xcodebuild test-without-building \
            -project DesignPatterns/DesignPatterns.xcodeproj \
            -scheme DesignPatterns \
            -destination "$DEST" \
            -only-testing:DesignPatternsSnapshotTests \
            -parallel-testing-enabled NO \
            -maximum-concurrent-test-simulator-destinations 1 \
            -derivedDataPath "$DERIVED_DATA" \
            -enableCodeCoverage YES

      - name: Run UI Tests
        run: |
          xcodebuild test-without-building \
            -project DesignPatterns/DesignPatterns.xcodeproj \
            -scheme DesignPatterns \
            -destination "$DEST" \
            -only-testing:DesignPatternsUITests \
            -parallel-testing-enabled NO \
            -maximum-concurrent-test-simulator-destinations 1 \
            -derivedDataPath "$DERIVED_DATA" \
            -enableCodeCoverage YES

      - name: Extract coverage and build badge
        id: cov
        run: |
          mkdir -p coverage/json
          for B in "$DERIVED_DATA"/*Results.xcresult; do
            [ -d "$B" ] || continue
            xcrun xccov view --report --json "$B" > "coverage/json/$(basename "$B").json"
          done

          COV=$(jq -s '
            [.[].targets[]]
            | group_by(.name)
            | map({name:.[0].name, lineCoverage:(map(.lineCoverage)|max)})
            | [.[].lineCoverage]
            | add / length * 100
          ' coverage/json/*.json)

          printf "%.2f\n" "$COV" > coverage.txt
          echo "coverage=$COV" >> "$GITHUB_OUTPUT"

          P=$(printf "%.0f" "$COV")
          if (( P < 60 )); then COLOR=red; elif (( P < 80 )); then COLOR=yellow; else COLOR=brightgreen; fi
          curl -s "https://img.shields.io/badge/coverage-${P}%25-${COLOR}.svg" > coverage-badge.svg

      - name: Commit coverage badge
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: update coverage badge [skip ci]"
          file_pattern: coverage-badge.svg coverage.txt

      - name: Shutdown simulators
        if: always()
        run: xcrun simctl shutdown all || true

      - name: Install fastlane
        run: brew install fastlane

      - name: Take screenshots
        env:
          FASTLANE_SKIP_UPDATE_CHECK: true
        run: |
          fastlane snapshot --verbose \
            --scheme FastlaneSnapshots \
            --devices "$SIM_DEVICE"

      - name: Commit updated screenshots
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: snapshots updated [skip ci]"
          file_pattern: docs/screenshots/*
