name: DesignPatterns iOS CI/CD

on:
  push:
    branches: [main]

env:
  SIM_DEVICE: "iPhone 16 Pro"
  SIM_OS:     "18.5" 

jobs:
  build-test:
    runs-on: macos-15
    permissions:
      contents: write
    timeout-minutes: 180

    steps:
    # ─── Source ─────────────────────────────────────────────────────────
    - uses: actions/checkout@v4

    # ─── Xcode version ──────────────────────────────────────────────────
    - name: Select Xcode 16.4
      run: sudo xcode-select -s /Applications/Xcode_16.4.app

    # ─── Swift‑PM cache ─────────────────────────────────────────────────
    - name: Cache Swift Packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.swiftpm
          ~/Library/Developer/Xcode/DerivedData/WorkspaceArtifacts/*
          ~/Library/Developer/Xcode/DerivedData/ModuleCache
        key:  macOS-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: macOS-spm-

    # ─── Pick concrete simulator UDID ───────────────────────────────────
    - name: Pick simulator UDID
      id: sim
      run: |
        UDID=$(xcrun simctl list devices "iOS ${SIM_OS}" \
               | grep "${SIM_DEVICE} (" \
               | head -n1 | sed -E 's/.*\(([^)]+)\).*/\1/')
        echo "Picked UDID: $UDID"
        echo "udid=$UDID" >>"$GITHUB_OUTPUT"

    # ─── Boot exactly that simulator ────────────────────────────────────
    - name: Boot simulator
      run: xcrun simctl boot "${{ steps.sim.outputs.udid }}" || true

    # ─── fastlane & helpers ─────────────────────────────────────────────
    - name: Install fastlane
      run: brew install fastlane
      
    - name: Warm‑up xcodebuild settings
      run: xcodebuild -showBuildSettings \
            -scheme DesignPatterns \
            -project DesignPatterns/DesignPatterns.xcodeproj | head -5

    # ─── Screenshots (fastlane snapshot) ────────────────────────────────
    - name: Take screenshots (fastlane snapshot)
      env:
        FASTLANE_SKIP_UPDATE_CHECK: true
        FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: "180"
        FASTLANE_XCODEBUILD_SETTINGS_RETRIES:  "1"
      run: fastlane snapshot --verbose

    - name: Commit updated screenshots
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "ci: snapshots updated [skip ci]"
        file_pattern: docs/screenshots/*

    # ─── BUILD & TESTS ──────────────────────────────────────────────────
    - name: Build for testing
      run: |
        xcodebuild build-for-testing \
          -project DesignPatterns/DesignPatterns.xcodeproj \
          -scheme DesignPatterns \
          -destination "id=${{ steps.sim.outputs.udid }}" \
          -enableCodeCoverage YES

    - name: Run Unit Tests
      run: |
        xcodebuild test-without-building \
          -project DesignPatterns/DesignPatterns.xcodeproj \
          -scheme DesignPatterns \
          -destination "id=${{ steps.sim.outputs.udid }}" \
          -only-testing:DesignPatternsTests \
          -parallel-testing-enabled YES \
          -maximum-concurrent-test-simulator-destinations 2 \
          -enableCodeCoverage YES

    - name: Run Snapshot Tests
      run: |
        xcodebuild test-without-building \
          -project DesignPatterns/DesignPatterns.xcodeproj \
          -scheme DesignPatterns \
          -destination "id=${{ steps.sim.outputs.udid }}" \
          -only-testing:DesignPatternsSnapshotTests \
          -parallel-testing-enabled NO \
          -maximum-concurrent-test-simulator-destinations 1 \
          -enableCodeCoverage YES

    - name: Run UI Tests
      run: |
        xcodebuild test-without-building \
          -project DesignPatterns/DesignPatterns.xcodeproj \
          -scheme DesignPatterns \
          -destination "id=${{ steps.sim.outputs.udid }}" \
          -only-testing:DesignPatternsUITests \
          -parallel-testing-enabled NO \
          -maximum-concurrent-test-simulator-destinations 1 \
          -enableCodeCoverage YES

    # ─── Coverage badge ────────────────────────────────────────────────
    - name: Extract coverage %
      id: cov
      run: |
        OBJROOT=$(xcodebuild -showBuildSettings -scheme DesignPatterns | awk '/OBJROOT/ {print $3}')
        PROFDATA=$(find "$OBJROOT" -name default.profdata | head -1)
        APP=$(find "$OBJROOT" -name DesignPatterns.app | head -1)
        PCT=$(xcrun llvm-cov export -summary-only -instr-profile "$PROFDATA" "$APP" \
              | awk '/line.*percent:/ {printf "%.1f",$3*100}')
        echo "percent=$PCT" >> "$GITHUB_OUTPUT"

    - name: Save badge json
      run: |
        mkdir -p docs
        echo "[{\"label\":\"coverage\",\"message\":\"${{ steps.cov.outputs.percent }}%\",\"color\":\"blue\"}]" > docs/coverage.json

    - name: Commit coverage badge
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        commit_message: "ci: coverage badge updated [skip ci]"
